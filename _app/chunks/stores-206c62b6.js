var g=Object.defineProperty,p=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var c=Object.getOwnPropertySymbols;var f=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var d=(s,t,e)=>t in s?g(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,u=(s,t)=>{for(var e in t||(t={}))f.call(t,e)&&d(s,e,t[e]);if(c)for(var e of c(t))y.call(t,e)&&d(s,e,t[e]);return s},h=(s,t)=>p(s,w(t));import{N as _,C as k}from"./vendor-88eee2ca.js";const S="",A="",I=(s,t=S,e=A)=>({send:{amount:s,recipient:t,recipient_code_hash:e,msg:"eyJyZWNlaXZlX21pbnQiOnt9fQ=="}}),C={exec:{gas:"500500"}},m=k([]),v="https://secret-4.api.trivium.network:1317",x="secret1k0jntykt7e4g3y88ltc60czgjuqdy4c9e8fzek",F=s=>new Promise(t=>setTimeout(t,s)),b=async(s,t,e=1200)=>{let n=0;for(;s();){if(n+=50,n>e)throw Error(t);await F(50)}};class E{constructor(t=!1,e="secret-4",n="secret1ac2kufxkz9gz9dhfgdgxhrp8yh2ty6g73udrde",i="45AD7D178E0B071B1F54C3FBA8BF3CFF77DDEC92FFABB308F9E8D7A7C62EDBB6"){if(this.connected=t,this.chainId=e,this.contractAddress=n,this.contractHash=i,this.address="",this.permitParams={permit_name:"hunter_permit",allowed_tokens:[this.contractAddress],permissions:["owner"]},typeof window!="undefined"){t=localStorage.getItem("connected")==="true";const a=localStorage.getItem("signature");a&&(this.signature=JSON.parse(a))}}async setupKeplr(){await b(()=>!window.keplr&&!window.getOfflineSigner&&!window.getEnigmaUtils,"Couldn't connect to Keplr. Make sure it is installed"),await window.keplr.enable(this.chainId);const t=window.getOfflineSigner(this.chainId),e=await t.getAccounts();this.address=e[0].address,this.client=new _(v,this.address,t,window.getEnigmaUtils(this.chainId),C),this.connected=!0,localStorage.setItem("connected","true")}async getSignature(){const{signature:t}=await window.keplr.signAmino(this.chainId,this.address,{chain_id:this.chainId,account_number:"0",sequence:"0",fee:{amount:[{denom:"uscrt",amount:"0"}],gas:"1"},msgs:[{type:"query_permit",value:this.permitParams}],memo:""},{preferNoSetFee:!0,preferNoSetMemo:!0});return this.signature=t,localStorage.setItem("signature",JSON.stringify(t)),t}async customQueryPermit(t){var i;const e={with_permit:{query:t,permit:{params:h(u({},this.permitParams),{chain_id:this.chainId}),signature:(i=this.signature)!=null?i:await this.getSignature()}}};return await this.client.queryContractSmart(this.contractAddress,e)}async customQuery(t){return await this.client.queryContractSmart(this.contractAddress,t)}async getToken(t){return await this.customQueryPermit({nft_dossier:{token_id:t}})}async transfer(t,e){return await this.client.execute(this.contractAddress,{transfer_nft:{token_id:t,recipient:e}})}async getTokens(t=!1){if(!t){const i=localStorage.getItem("hunters");if(i){const r=JSON.parse(i);return m.update(()=>r),r}}const e=await this.customQueryPermit({tokens:{owner:this.address}}),n=[];for(const i of e.token_list.tokens){const r=await this.customQueryPermit({nft_dossier:{token_id:i}}),a={id:i,image:r.nft_dossier.public_metadata.extension.media[0].url};r.nft_dossier.public_metadata.extension.attributes.forEach(o=>{a[o.trait_type]=o.value});const l=r.nft_dossier.private_metadata.extension.attributes[0];a["Eaten Count"]=l.value,n.push(a),m.update(o=>[...o,a])}return localStorage.setItem("hunters",JSON.stringify(n)),n}async mint(t,e){return await this.client.execute(x,I(t,this.contractAddress,this.contractHash),void 0,void 0,{gas:e})}async hunt(t,e){return await this.client.execute(this.contractAddress,{eat:{eater_id:t,food_id:e}},void 0,void 0,{gas:"42000"})}}const O=new E;export{m as l,b as t,O as w};
