var l=Object.defineProperty,p=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var f=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var u=(e,t,s)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,d=(e,t)=>{for(var s in t||(t={}))f.call(t,s)&&u(e,s,t[s]);if(o)for(var s of o(t))y.call(t,s)&&u(e,s,t[s]);return e},h=(e,t)=>p(e,w(t));import{N as i,O as S}from"./vendor-7a029297.js";const k="",A="",_={receive_mint:{}},I=(e=k,t=A)=>({send:{amount:"150000000",recipient:e,recipient_code_hash:t,msg:i.exports.Buffer.from(JSON.stringify(_)).toString("base64")}}),x={exec:{gas:"500500"}},C="https://secret-4.api.trivium.network:1317",m="secret1k0jntykt7e4g3y88ltc60czgjuqdy4c9e8fzek",b=e=>new Promise(t=>setTimeout(t,e)),g=async(e,t,s=1200)=>{let n=0;for(;e();){if(n+=10,n>s)throw Error(t);await b(10)}};class v{constructor(t=!1,s="secret-4",n="secret1usycsk8ex8gj4t2uzg6sadkcw4jvflkjkxldk8"){if(this.connected=t,this.chainId=s,this.contractAddress=n,this.address="",this.permitParams={permit_name:"_permit",allowed_tokens:[this.contractAddress],permissions:["owner"]},typeof window!="undefined"){t=localStorage.getItem("connected")==="true";const a=localStorage.getItem("signature");a&&(this.signature=JSON.parse(a))}}async setupKeplr(){await g(()=>!window.keplr&&!window.getOfflineSigner&&!window.getEnigmaUtils,"Couldn't connect to Keplr. Make sure it is installed"),await window.keplr.enable(this.chainId);const t=window.getOfflineSigner(this.chainId),s=await t.getAccounts();this.address=s[0].address,this.client=new S(C,this.address,t,window.getEnigmaUtils(this.chainId),x),this.connected=!0,localStorage.setItem("connected","true")}async getSignature(){const{signature:t}=await window.keplr.signAmino(this.chainId,this.address,{chain_id:this.chainId,account_number:"0",sequence:"0",fee:{amount:[{denom:"uscrt",amount:"0"}],gas:"1"},msgs:[{type:"query_permit",value:this.permitParams}],memo:""},{preferNoSetFee:!0,preferNoSetMemo:!0});return this.signature=t,localStorage.setItem("signature",JSON.stringify(t)),t}async customQueryPermit(t){var r;const s={with_permit:{query:t,permit:{params:h(d({},this.permitParams),{chain_id:this.chainId}),signature:(r=this.signature)!=null?r:await this.getSignature()}}};return await this.client.queryContractSmart(this.contractAddress,s)}async customQuery(t){return await this.client.queryContractSmart(this.contractAddress,t)}async getToken(t){return await this.customQueryPermit({nft_dossier:{token_id:t}})}async transfer(t,s){return await this.client.execute(this.contractAddress,{transfer_nft:{token_id:t,recipient:s}})}async getTokens(){return await g(()=>!this.address,"Couldn't get tokens",5e3),await this.customQueryPermit({tokens:{owner:this.address}})}async hash(t=this.contractAddress){return await this.client.restClient.getCodeHashByContractAddr(t)}async swap(t="150"){const s={deposit:{}},n=[{denom:"uscrt",amount:t+"000000"}];return await this.client.execute(m,s,"",n)}async mint(){return await this.client.execute(m,I())}}const q=new v,O="aes-256-gcm";function N(e){const t=e.length;return t<10?e:e.substring(0,8)+"..."+e.substring(t-4,t)}const P=(e,t)=>{const s=i.exports.Buffer.from(t),n=e.readUInt8(0),r=e.slice(1,n+1),a=e.slice(n+1,n+17),c=i.exports.createDecipheriv(O,s,r);return c.setAuthTag(a),i.exports.Buffer.concat([c.update(e.slice(n+17)),c.final()])},M=async(e,t)=>{const s=await fetch(e),n=i.exports.Buffer.from(await s.arrayBuffer());return P(n,t).toString("base64")};export{M as d,N as f,q as w};
